<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mxne</title>
  
  
  <link href="https://blog.mxne.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.mxne.cn/"/>
  <updated>2023-05-20T02:44:23.332Z</updated>
  <id>https://blog.mxne.cn/</id>
  
  <author>
    <name>Mxne</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C语言-杨辉三角</title>
    <link href="https://blog.mxne.cn/posts/e11.html"/>
    <id>https://blog.mxne.cn/posts/e11.html</id>
    <published>2023-05-19T10:13:31.000Z</published>
    <updated>2023-05-20T02:44:23.332Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是杨辉三角？"><a href="#什么是杨辉三角？" class="headerlink" title="什么是杨辉三角？"></a>什么是杨辉三角？</h3><p>如下是一个6行的杨辉三角，每个数字等于上方两数字之和。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">      1</span><br><span class="line">     1 1</span><br><span class="line">    1 2 1</span><br><span class="line">   1 3 3 1</span><br><span class="line">  1 4 6 4 1</span><br><span class="line">1 5 10 10 5 1</span><br></pre></td></tr></table></figure><blockquote><p>注意：以下方法只是实现了杨辉右三角，如以下:</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1 1</span><br><span class="line">1 2 1</span><br><span class="line">1 3 3 1</span><br><span class="line">1 4 6 4 1</span><br></pre></td></tr></table></figure><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>使用二维数组存储整个杨辉三角</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10   <span class="comment">// 定义杨辉三角的行数</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[N][N] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == j || j == <span class="number">0</span>)  <span class="comment">// 如果是第一列或者对角线上的元素，则赋值为1</span></span><br><span class="line">            &#123;</span><br><span class="line">                arr[i][j] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>                   <span class="comment">// 否则，根据杨辉三角的规律，计算当前位置上方两个元素之和</span></span><br><span class="line">            &#123;</span><br><span class="line">                arr[i][j] = arr[i - <span class="number">1</span>][j] + arr[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)  <span class="comment">// 输出杨辉三角</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%-3d &quot;</span>, arr[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h4><blockquote><p>使用二维数组存储整个杨辉三角。在外层循环中，我们用变量 i 从 0 循环到 N-1，控制杨辉三角的行数；在内层循环中，我们用变量 j 从 0 循环到 i，控制杨辉三角每一行中元素的个数。<br>在计算杨辉三角的过程中，我们判断当前位置是否是第一列或者对角线上的元素，如果是则赋值为1，否则根据杨辉三角的规律，计算当前位置上方两个元素之和，并将结果赋给当前位置。最后，我们使用两重循环遍历整个数组并输出每个元素，使用%-3d格式化字符串来保证每个数字占据 3 个字符的宽度并且左对齐，最后换行。</p></blockquote><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>使用一维数组存储每一行的元素</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 6 <span class="comment">// 杨辉三角的行数</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arr[N] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = i; j &gt;= <span class="number">1</span>; j--)      <span class="comment">// 计算非首尾元素的值</span></span><br><span class="line">        &#123;</span><br><span class="line">            arr[j] = arr[j] + arr[j - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)     <span class="comment">// 输出当前行的所有元素</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%-4d&quot;</span>, arr[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="详解："><a href="#详解：" class="headerlink" title="详解："></a>详解：</h4><blockquote><p>使用一维数组存储每一行的元素。在外层循环中，我们用变量 i 从 0 循环到 N-1，计算出杨辉三角的每一行的值。在内层循环中，我们先使用变量 j 从 i 开始循环到 1，计算非首尾元素的值。具体地，我们将当前位置 arr[j] 的值加上它前面的元素 arr[j-1] 的值，得到新的元素值。接着，我们再次使用变量 j 从 0 循环到 i，输出当前行的所有元素。为了美观起见，我们在输出每个元素时使用 % -4d 这个格式化字符串来保证每个数字占据 4 个字符的宽度并且左对齐。最后，我们在每一行输出完毕后使用 printf(“\n”) 来换行。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;什么是杨辉三角？&quot;&gt;&lt;a href=&quot;#什么是杨辉三角？&quot; class=&quot;headerlink&quot; title=&quot;什么是杨辉三角？&quot;&gt;&lt;/a&gt;什么是杨辉三角？&lt;/h3&gt;&lt;p&gt;如下是一个6行的杨辉三角，每个数字等于上方两数字之和。&lt;/p&gt;
&lt;figure class=</summary>
      
    
    
    
    <category term="C语言" scheme="https://blog.mxne.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="编程题" scheme="https://blog.mxne.cn/tags/%E7%BC%96%E7%A8%8B%E9%A2%98/"/>
    
    <category term="C语言" scheme="https://blog.mxne.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>C语言-泰勒公式求sin(x)</title>
    <link href="https://blog.mxne.cn/posts/53eb.html"/>
    <id>https://blog.mxne.cn/posts/53eb.html</id>
    <published>2023-05-19T10:12:53.000Z</published>
    <updated>2023-05-20T02:30:00.634Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是泰勒公式"><a href="#什么是泰勒公式" class="headerlink" title="什么是泰勒公式?"></a>什么是泰勒公式?</h3><p>这不重要，以下是泰勒公式求sin(x)的公式。<br><img src="https://bu.dusays.com/2023/05/19/6467913a31e14.png" alt="image-20230519181937164"></p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>依次计算每个项的值，并将它们累加起来。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="title function_">jc</span><span class="params">(<span class="type">int</span> num)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> x;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sin(x)：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line"><span class="type">int</span> n = <span class="number">1</span>;   <span class="comment">// 当前项数，初始为1</span></span><br><span class="line"><span class="type">double</span> term = x; <span class="comment">// 当前项的值，初始为x</span></span><br><span class="line"><span class="type">double</span> sum = x;  <span class="comment">// 求和变量，初始为x</span></span><br><span class="line"><span class="type">int</span> t = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">fabs</span>(term) &gt;= <span class="number">1e-5</span>)</span><br><span class="line">&#123;</span><br><span class="line">n++;</span><br><span class="line">term = <span class="built_in">pow</span>(x, <span class="number">2</span> * n - <span class="number">1</span>) / jc(<span class="number">2</span> * n - <span class="number">1</span>) * t;  <span class="comment">// 计算当前项的值</span></span><br><span class="line">sum = sum + term;</span><br><span class="line">t = -t;    <span class="comment">// 取相反的正负号，使下一项的符号与上一项相反</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lf&quot;</span>,sum);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> <span class="title function_">jc</span><span class="params">(<span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> res = <span class="number">1.0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= num; i++)</span><br><span class="line">&#123;</span><br><span class="line">res = res * i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h4><blockquote><p>这段代码实现了通过泰勒级数计算正弦值的方法，并使用一个while循环来实现。在循环开始时，我们定义变量 n 表示当前项的编号，初始值为 1；定义变量 term 表示当前项的值，初始值也为 x；定义变量 sum 表示当前所有项的累加和，初始值也为 x。<br>由于正弦函数的泰勒级数中每一项都包括一个阶乘，因此我们需要先定义一个函数 jc 来计算阶乘。在while循环中，我们每次都计算当前项的值 term，并将其累加到 sum 中。同时，我们需要根据当前项的编号来决定这一项的符号是正还是负，可以定义一个变量 t，每次将其取相反值即可实现。</p></blockquote><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>通过观察 sin(x) 的泰勒级数中每两项之间的关系，直接计算出每一项，并将它们累加起来。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> x;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sin(x)：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line">    <span class="type">double</span> term = x;</span><br><span class="line">    <span class="type">double</span> sum = x;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">fabs</span>(term) &gt;= <span class="number">1e-5</span>)</span><br><span class="line">&#123;</span><br><span class="line">        term = -term * x * x / ((n + <span class="number">1</span>) * (n + <span class="number">2</span>));  <span class="comment">// 计算当前项的值时直接利用前一项的值来计算。</span></span><br><span class="line">        sum = sum + term;</span><br><span class="line">        n += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sin(x)=%lf&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="核心"><a href="#核心" class="headerlink" title="核心"></a>核心</h4><blockquote><p>当前项的值等于上一项的相反数乘以x的平方再除以 (n+1)(n+2)。<br>也就是：term=−term∗x∗x/((n+1)∗(n+2))</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;什么是泰勒公式&quot;&gt;&lt;a href=&quot;#什么是泰勒公式&quot; class=&quot;headerlink&quot; title=&quot;什么是泰勒公式?&quot;&gt;&lt;/a&gt;什么是泰勒公式?&lt;/h3&gt;&lt;p&gt;这不重要，以下是泰勒公式求sin(x)的公式。&lt;br&gt;&lt;img src=&quot;https://bu.</summary>
      
    
    
    
    <category term="C语言" scheme="https://blog.mxne.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="编程题" scheme="https://blog.mxne.cn/tags/%E7%BC%96%E7%A8%8B%E9%A2%98/"/>
    
    <category term="C语言" scheme="https://blog.mxne.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>数词</title>
    <link href="https://blog.mxne.cn/posts/7a01.html"/>
    <id>https://blog.mxne.cn/posts/7a01.html</id>
    <published>2023-05-02T13:30:04.000Z</published>
    <updated>2023-05-12T11:52:19.467Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基数词"><a href="#基数词" class="headerlink" title="基数词"></a>基数词</h2><h3 id="基数词的表示"><a href="#基数词的表示" class="headerlink" title="基数词的表示"></a>基数词的表示</h3><h4 id="1-几十几"><a href="#1-几十几" class="headerlink" title="1. 几十几"></a>1. 几十几</h4><blockquote><p>先说“几十”，再说“几”，中间加上连字号</p></blockquote><p>eg：<br>39 thirty-nine<br>83 eight-three</p><h4 id="2-101-999"><a href="#2-101-999" class="headerlink" title="2. 101-999"></a>2. 101-999</h4><blockquote><p>先说“几百”，再加and，再加末尾两位数或末位数</p></blockquote><p>eg:<br>375 three hundred and seventy-five<br>902 nine hundred and two</p><h4 id="3-1000以上"><a href="#3-1000以上" class="headerlink" title="3. 1000以上"></a>3. 1000以上</h4><p>eg:<br>4007 four thousand and seven<br>8021 eight thousand and twenty-one</p><h3 id="基数词其他考点"><a href="#基数词其他考点" class="headerlink" title="基数词其他考点"></a>基数词其他考点</h3><h4 id="1-基数词的复数形式"><a href="#1-基数词的复数形式" class="headerlink" title="1. 基数词的复数形式"></a>1. 基数词的复数形式</h4><p>eg:<br>hundreds of<br>thousands of</p><blockquote><p>注意：two thousand 这里用单数</p></blockquote><h4 id="2-年岁（in-one’s-结构）"><a href="#2-年岁（in-one’s-结构）" class="headerlink" title="2. 年岁（in one’s 结构）"></a>2. 年岁（in one’s 结构）</h4><p>eg:<br>in one’s forties 在某人四十多岁时</p><h4 id="3-年代"><a href="#3-年代" class="headerlink" title="3. 年代"></a>3. 年代</h4><p>eg:<br>in 1950’s 20世纪50年代</p><h2 id="序数词"><a href="#序数词" class="headerlink" title="序数词"></a>序数词</h2><h3 id="序数词的表示"><a href="#序数词的表示" class="headerlink" title="序数词的表示"></a>序数词的表示</h3><h4 id="1-序数词一般都是在基数词后面加th，除了“第一”，“第二“，”第三“之外。"><a href="#1-序数词一般都是在基数词后面加th，除了“第一”，“第二“，”第三“之外。" class="headerlink" title="1. 序数词一般都是在基数词后面加th，除了“第一”，“第二“，”第三“之外。"></a>1. 序数词一般都是在基数词后面加th，除了“第一”，“第二“，”第三“之外。</h4><p>eg:<br>first    —-&gt; 1st<br>second   —-&gt; 2nd<br>third    —-&gt; 3rd</p><p>fifth, eighth, ninth …</p><h4 id="2-两位数的词，只需要把个位数变为序数词"><a href="#2-两位数的词，只需要把个位数变为序数词" class="headerlink" title="2. 两位数的词，只需要把个位数变为序数词"></a>2. 两位数的词，只需要把个位数变为序数词</h4><p>eg:<br>第22 twenty-second<br>第78 seventy-eighth</p><h4 id="3-三位以上的词，把最后两位数变为序数词"><a href="#3-三位以上的词，把最后两位数变为序数词" class="headerlink" title="3. 三位以上的词，把最后两位数变为序数词"></a>3. 三位以上的词，把最后两位数变为序数词</h4><p>eg:<br>第150 one hundred and fiftieth<br>第999 nine hundred and ninety-ninth</p><h3 id="序数词的其他考点"><a href="#序数词的其他考点" class="headerlink" title="序数词的其他考点"></a>序数词的其他考点</h3><h4 id="1-序数词与a连用，表示”再一个“，”又一个“"><a href="#1-序数词与a连用，表示”再一个“，”又一个“" class="headerlink" title="1. 序数词与a连用，表示”再一个“，”又一个“"></a>1. 序数词与a连用，表示”再一个“，”又一个“</h4><p>eg:<br>a second time 再一次</p><h4 id="2-日期"><a href="#2-日期" class="headerlink" title="2. 日期"></a>2. 日期</h4><p>eg:<br>五月一日 May 1st<br>三月八日 March 8th<br>四月二十二 April 22nd</p><blockquote><p>注意日的后缀</p></blockquote><h2 id="分数词"><a href="#分数词" class="headerlink" title="分数词"></a>分数词</h2><blockquote><p>基数词作分子，序数词作分母。分子大于1时，分母用复数</p></blockquote><p>eg:<br>三分之一 one third<br>三分之二 two thirds</p><h2 id="百分数"><a href="#百分数" class="headerlink" title="百分数"></a>百分数</h2><p>由 per cent / percent 表示</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><details class="folding-tag" cyan closed><summary> 数词思维导图 </summary>              <div class='content'>              <p><img src="https://bu.dusays.com/2023/05/02/6451161baf5f3.png" alt="image-20230502215422954"></p>              </div>            </details>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基数词&quot;&gt;&lt;a href=&quot;#基数词&quot; class=&quot;headerlink&quot; title=&quot;基数词&quot;&gt;&lt;/a&gt;基数词&lt;/h2&gt;&lt;h3 id=&quot;基数词的表示&quot;&gt;&lt;a href=&quot;#基数词的表示&quot; class=&quot;headerlink&quot; title=&quot;基数词的表示&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="英语" scheme="https://blog.mxne.cn/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
    <category term="英语" scheme="https://blog.mxne.cn/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>扫雷</title>
    <link href="https://blog.mxne.cn/posts/4f11.html"/>
    <id>https://blog.mxne.cn/posts/4f11.html</id>
    <published>2023-04-29T07:57:41.000Z</published>
    <updated>2023-04-29T08:30:24.241Z</updated>
    
    <content type="html"><![CDATA[<h3 id="test-c文件"><a href="#test-c文件" class="headerlink" title="test.c文件"></a>test.c文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;game.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***************************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;****      1.play       ****\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;****      0.exit       ****\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;***************************\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">game</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> mine[ROWS][COLS] = &#123; <span class="number">0</span> &#125;;   <span class="comment">// 放雷</span></span><br><span class="line"><span class="type">char</span> show[ROWS][COLS] = &#123; <span class="number">0</span> &#125;;   <span class="comment">// 放排查雷的信息</span></span><br><span class="line"><span class="comment">// 初始化 mine： 0</span></span><br><span class="line">InitBoard(mine, ROWS, COLS, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="comment">// 初始化 show： *</span></span><br><span class="line">InitBoard(show, ROWS, COLS, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">SetMine(mine, ROW, COL);   <span class="comment">// 放雷</span></span><br><span class="line"><span class="comment">//DisplayBoard(mine, ROW, COL);  // 开透视</span></span><br><span class="line">DisplayBoard(show, ROW, COL);</span><br><span class="line">FindMine(mine, show, ROW, COL);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">menu();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请选择：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line"><span class="keyword">switch</span> (input)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: </span><br><span class="line">game();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;退出游戏\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入错误\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">while</span> (input);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="game-c"><a href="#game-c" class="headerlink" title="game.c"></a>game.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;game.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitBoard</span><span class="params">(<span class="type">char</span> board[ROWS][COLS], <span class="type">int</span> rows, <span class="type">int</span> cols, <span class="type">char</span> <span class="built_in">set</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; rows; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; cols; j++)</span><br><span class="line">&#123;</span><br><span class="line">board[i][j] = <span class="built_in">set</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayBoard</span><span class="params">(<span class="type">char</span> board[ROWS][COLS], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;------扫雷游戏------\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= col; i++)  <span class="comment">// 打印列号</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);    <span class="comment">// 打印行号</span></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= col; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c &quot;</span>, board[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;------扫雷游戏------\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SetMine</span><span class="params">(<span class="type">char</span> board[ROWS][COLS], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> count = EASY_CONUT;         <span class="comment">// 雷的个数</span></span><br><span class="line"><span class="keyword">while</span> (count)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = rand() % row + <span class="number">1</span>;   <span class="comment">// 1 - 9</span></span><br><span class="line"><span class="type">int</span> y = rand() % row + <span class="number">1</span>;   <span class="comment">// 1 - 9 </span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">board[x][y] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">count--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">CountMine</span><span class="params">(<span class="type">char</span> board[ROWS][COLS], <span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (board[x - <span class="number">1</span>][y] + board[x - <span class="number">1</span>][y - <span class="number">1</span>] + board[x][y - <span class="number">1</span>] + board[x + <span class="number">1</span>][y - <span class="number">1</span>] + board[x + <span class="number">1</span>][y] + board[x + <span class="number">1</span>][y + <span class="number">1</span>] + board[x][y + <span class="number">1</span>] + board[x - <span class="number">1</span>][y + <span class="number">1</span>] - <span class="number">8</span> * <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">FindMine</span><span class="params">(<span class="type">char</span> mine[ROWS][COLS], <span class="type">char</span> show[ROWS][COLS], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> win = <span class="number">0</span>;   <span class="comment">// 已排雷的个数</span></span><br><span class="line"><span class="keyword">while</span> (win &lt; row * col - EASY_CONUT)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要排查的坐标：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (x &gt;= <span class="number">1</span> &amp;&amp; x &lt;= row &amp;&amp; y &gt;= <span class="number">1</span> &amp;&amp; y &lt;= col)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (show[x][y] != <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您刚输入的位置，已经排查过了&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mine[x][y] == <span class="string">&#x27;1&#x27;</span>)   <span class="comment">// 踩雷了</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;你被炸死了\n&quot;</span>);</span><br><span class="line">DisplayBoard(mine, ROW, COL);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">win++;</span><br><span class="line"><span class="comment">// 统计这个坐标周围有几个雷</span></span><br><span class="line"><span class="type">int</span> count = CountMine(mine, x, y);</span><br><span class="line">show[x][y] = count + <span class="string">&#x27;0&#x27;</span>;    <span class="comment">// show 是字符数组，要将count转为字符，也就是+&#x27;0&#x27;</span></span><br><span class="line">DisplayBoard(show, ROW, COL);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;坐标输入错误，请重新输入\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (win == row * col - EASY_CONUT)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;恭喜你，排雷成功\n&quot;</span>);</span><br><span class="line">DisplayBoard(mine, ROW, COL);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="game-h"><a href="#game-h" class="headerlink" title="game.h"></a>game.h</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 9</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 9</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROWS ROW+2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COLS COL+2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> EASY_CONUT 10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitBoard</span><span class="params">(<span class="type">char</span> board[ROWS][COLS], <span class="type">int</span> rows, <span class="type">int</span> cols, <span class="type">char</span> <span class="built_in">set</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayBoard</span><span class="params">(<span class="type">char</span> board[ROWS][COLS], <span class="type">int</span> row, <span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SetMine</span><span class="params">(<span class="type">char</span> board[ROWS][COLS], <span class="type">int</span> row, <span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">FindMine</span><span class="params">(<span class="type">char</span> mine[ROWS][COLS], <span class="type">char</span> show[ROWS][COLS], <span class="type">int</span> row, <span class="type">int</span> col)</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;test-c文件&quot;&gt;&lt;a href=&quot;#test-c文件&quot; class=&quot;headerlink&quot; title=&quot;test.c文件&quot;&gt;&lt;/a&gt;test.c文件&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="C语言" scheme="https://blog.mxne.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://blog.mxne.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="C语言小游戏" scheme="https://blog.mxne.cn/tags/C%E8%AF%AD%E8%A8%80%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>三子棋</title>
    <link href="https://blog.mxne.cn/posts/93a6.html"/>
    <id>https://blog.mxne.cn/posts/93a6.html</id>
    <published>2023-04-29T07:57:30.578Z</published>
    <updated>2023-04-29T08:30:23.043Z</updated>
    
    <content type="html"><![CDATA[<h3 id="text-c文件"><a href="#text-c文件" class="headerlink" title="text.c文件"></a>text.c文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;game.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*****************************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*****  1.play   0.exit  *****\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*****************************\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">game</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> ret = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> board[ROW][COL] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">InitBoard(board, ROW, COL);</span><br><span class="line">DisplayBoard(board, ROW, COL);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">PlayerMove(board, ROW, COL);</span><br><span class="line"><span class="comment">// 判断输赢</span></span><br><span class="line">ret = IsWin(board, ROW, COL);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DisplayBoard(board, ROW, COL);</span><br><span class="line">ComputerMove(board, ROW, COL);</span><br><span class="line"><span class="comment">// 判断输赢</span></span><br><span class="line">ret = IsWin(board, ROW, COL);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DisplayBoard(board, ROW, COL);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ret == <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;玩家赢\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ret == <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;电脑赢\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;平局\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">DisplayBoard(board, ROW, COL);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> input = <span class="number">0</span>;</span><br><span class="line">srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>));    <span class="comment">// 设置随机数种子</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">menu();   <span class="comment">// 打印菜单</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请选择：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;input);</span><br><span class="line"><span class="keyword">switch</span> (input)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">game();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;退出游戏\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;选择错误\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">while</span> (input);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="game-c"><a href="#game-c" class="headerlink" title="game.c"></a>game.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;game.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; col; j++)</span><br><span class="line">&#123;</span><br><span class="line">board[i][j] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//   |   |   </span></span><br><span class="line"><span class="comment">//---|---|---</span></span><br><span class="line"><span class="comment">//   |   |   </span></span><br><span class="line"><span class="comment">//---|---|---</span></span><br><span class="line"><span class="comment">//   |   |   </span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; col; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %c &quot;</span>, board[i][j]);</span><br><span class="line"><span class="keyword">if</span> (j &lt; col - <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (i &lt; row - <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; col; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;---&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (j &lt; col - <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PlayerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;玩家下棋：\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断坐标是否合法</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入下标：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line"><span class="keyword">if</span> (x &gt;= <span class="number">1</span> &amp;&amp; x &lt;= row &amp;&amp; y &gt;= <span class="number">1</span> &amp;&amp; y &lt;= col)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[x - <span class="number">1</span>][y - <span class="number">1</span>] == <span class="string">&#x27; &#x27;</span>)   <span class="comment">// 判断坐标是否为空</span></span><br><span class="line">&#123;</span><br><span class="line">board[x - <span class="number">1</span>][y - <span class="number">1</span>] = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;坐标已被占用，请重新输入\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;坐标非法，请重新输入\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ComputerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;电脑下棋：\n&quot;</span>);</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = rand() % row;</span><br><span class="line">y = rand() % col;</span><br><span class="line"><span class="keyword">if</span> (board[x][y] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">board[x][y] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断棋盘满了没</span></span><br><span class="line"><span class="comment">// 满    1</span></span><br><span class="line"><span class="comment">// 不满  0</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsFull</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; col; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> <span class="title function_">IsWin</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 行</span></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; row; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][<span class="number">0</span>] == board[i][<span class="number">1</span>] &amp;&amp; board[i][<span class="number">1</span>] == board[i][<span class="number">2</span>] &amp;&amp; board[i][<span class="number">1</span>] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> board[i][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 列</span></span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; col; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[<span class="number">0</span>][j] == board[<span class="number">1</span>][j] &amp;&amp; board[<span class="number">1</span>][j] == board[<span class="number">2</span>][j] &amp;&amp; board[<span class="number">0</span>][j] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> board[<span class="number">0</span>][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对角线</span></span><br><span class="line"><span class="keyword">if</span> (board[<span class="number">0</span>][<span class="number">0</span>] == board[<span class="number">1</span>][<span class="number">1</span>] &amp;&amp; board[<span class="number">1</span>][<span class="number">1</span>] == board[<span class="number">2</span>][<span class="number">2</span>] &amp;&amp; board[<span class="number">0</span>][<span class="number">0</span>] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> board[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (board[<span class="number">0</span>][<span class="number">2</span>] == board[<span class="number">1</span>][<span class="number">1</span>] &amp;&amp; board[<span class="number">1</span>][<span class="number">1</span>] == board[<span class="number">2</span>][<span class="number">0</span>] &amp;&amp; board[<span class="number">0</span>][<span class="number">2</span>] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> board[<span class="number">0</span>][<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (IsFull(board, row, col))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;Q&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>game.h文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化期盼</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印棋盘</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 玩家下棋</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PlayerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 电脑下棋</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ComputerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断输赢</span></span><br><span class="line"><span class="comment">// 玩家赢           ---&gt; &#x27;*&#x27;</span></span><br><span class="line"><span class="comment">// 电脑赢           ---&gt; &#x27;#&#x27;</span></span><br><span class="line"><span class="comment">// 平局             ---&gt; &#x27;Q&#x27;</span></span><br><span class="line"><span class="comment">// 继续（未出胜负）  ---&gt; &#x27;C&#x27;</span></span><br><span class="line"><span class="type">char</span> <span class="title function_">IsWin</span><span class="params">(<span class="type">char</span> board[ROW][COL], <span class="type">int</span> row, <span class="type">int</span> col)</span>;  </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;text-c文件&quot;&gt;&lt;a href=&quot;#text-c文件&quot; class=&quot;headerlink&quot; title=&quot;text.c文件&quot;&gt;&lt;/a&gt;text.c文件&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    <category term="C语言" scheme="https://blog.mxne.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="https://blog.mxne.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="C语言小游戏" scheme="https://blog.mxne.cn/tags/C%E8%AF%AD%E8%A8%80%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>主谓一致</title>
    <link href="https://blog.mxne.cn/posts/9402.html"/>
    <id>https://blog.mxne.cn/posts/9402.html</id>
    <published>2023-02-08T08:00:02.000Z</published>
    <updated>2023-05-02T13:58:10.754Z</updated>
    
    <content type="html"><![CDATA[<h2 id="就近原则"><a href="#就近原则" class="headerlink" title="就近原则"></a>就近原则</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">常见提示词：</span><br><span class="line">  not only … but also</span><br><span class="line">  not … but…</span><br><span class="line">  or</span><br><span class="line">  neither … nor</span><br><span class="line">  either … or</span><br><span class="line">  there be</span><br></pre></td></tr></table></figure><h2 id="就远原则"><a href="#就远原则" class="headerlink" title="就远原则"></a>就远原则</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">常见提示词：</span><br><span class="line">  as well as</span><br><span class="line">  ​with</span><br><span class="line">  except</span><br><span class="line">  but</span><br><span class="line">  in addition to</span><br><span class="line">  together/alone/combined with</span><br><span class="line">  rather than</span><br><span class="line">  besides</span><br><span class="line">  including</span><br><span class="line">  apart from</span><br></pre></td></tr></table></figure><h2 id="第三人称单数"><a href="#第三人称单数" class="headerlink" title="第三人称单数"></a>第三人称单数</h2><h3 id="什么时第三人称单数？"><a href="#什么时第三人称单数？" class="headerlink" title="什么时第三人称单数？"></a>什么时第三人称单数？</h3><p>除了 ”你“，“我”，都是第三人称；个数为 ”1“ 就是单数。满足这两个条件就是 <strong>第三人称单数</strong></p><h3 id="如何变第三人称单数"><a href="#如何变第三人称单数" class="headerlink" title="如何变第三人称单数?"></a>如何变第三人称单数?</h3><ol><li>动词直接加s</li><li>以 <code>s,x,ch,sh 结尾</code> 的动词，加 es</li><li>以 <code>辅音字母+y结尾</code> 的动词，变y为i，加es</li></ol><h3 id="常见第三人称单数"><a href="#常见第三人称单数" class="headerlink" title="常见第三人称单数"></a>常见第三人称单数</h3><ol><li>人称代词 <code>he she it</code></li><li>单个<code>人名 地名 或 称呼</code> 作为主语</li><li><strong>可数名词单数</strong> 或 <code>this / that / the + 单数可数名词</code> 作主语</li><li><code>复合不定代词</code> someone, somebody, nobody, everything, something等；只是代词 this, that 作主语</li><li><code>不可数名词</code> 作主语</li><li><code>数字 字母</code> 作主语</li><li>当 <code>every, each</code> 等词 <code>修饰单数或复数</code> </li></ol><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="1-number-of"><a href="#1-number-of" class="headerlink" title="1.number of"></a>1.number of</h3><p>the number of：”…的数量“，谓语动词用 <strong>单数</strong>。</p><p>a number of：”大量的；许多“，谓语动词用 <strong>复数</strong>。</p><h3 id="2-quantity-of"><a href="#2-quantity-of" class="headerlink" title="2.quantity of"></a>2.quantity of</h3><p>quantities of：”大量的；许多“，接不可数名词或可数名词复数，谓语动词用 <strong>复数</strong></p><p>a quantity of：”大量的；许多“，谓语动词的单复数 <strong>由of后的名词决定</strong></p><h3 id="3-A-of-B"><a href="#3-A-of-B" class="headerlink" title="3.A of B"></a>3.A of B</h3><p><strong>谓语动词的单复数</strong>，由of前面的名词，就是 <strong>取决于 A</strong>，<strong>重点在前</strong>，倒过来翻译</p><h3 id="4-分数"><a href="#4-分数" class="headerlink" title="4.分数"></a>4.分数</h3><p>谓语动词的单复数，取决于分数后的名词。</p><p>one third of</p><p>two thirds of</p><blockquote><p><strong>总结：分子用基数词，分母用序数词，当分子大于一时，分母要加s，分数没有单复，要看其后的名词。</strong></p></blockquote><h3 id="5-集体名词"><a href="#5-集体名词" class="headerlink" title="5.集体名词"></a>5.集体名词</h3><p>集体名词：表示一群人或一些物的名词叫集体（或集合）名词</p><p>class， family</p><p>当表示 <strong>整体</strong> 概念时，谓语动词为 <strong>单数</strong>；当表示 <strong>个体</strong>概念时，谓语动词为 <strong>复数</strong>；</p><p>例如：class表示 “整个班级” 时，为 单数；class表示 “全体同学” 时，为复数；</p><h3 id="6-特殊"><a href="#6-特殊" class="headerlink" title="6.特殊"></a>6.特殊</h3><div class="table-container"><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>both A and B …</td><td>复数，”A和B都“</td></tr><tr><td>every/each+名词</td><td>单数，”每一个“</td></tr><tr><td>冠词 A and B</td><td>单数，表一个人两个身份</td></tr><tr><td>冠词 A and 冠词 B</td><td>复数，表两个人 A B</td></tr><tr><td>名词短语</td><td>单数</td></tr></tbody></table></div><h3 id="7-定语从句的谓语动词"><a href="#7-定语从句的谓语动词" class="headerlink" title="7.定语从句的谓语动词"></a>7.定语从句的谓语动词</h3><p><code>the only one of + 可数名词复数形式 + 定语从句</code>，定语从句中的谓语动词用 <code>单数</code>形式</p><p><code>one of + 可数名词复数形式 + 定语从句</code> ,定语从句中的谓语动词用 <code>复数</code>形式</p><details class="folding-tag" cyan open><summary> 主谓一致思维导图 </summary>              <div class='content'>              <p><img src="https://bu.dusays.com/2023/02/08/63e358afed88e.png" alt=""><br><img src="https://bu.dusays.com/2023/02/08/63e358b0073cf.png" alt=""></p>              </div>            </details>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;就近原则&quot;&gt;&lt;a href=&quot;#就近原则&quot; class=&quot;headerlink&quot; title=&quot;就近原则&quot;&gt;&lt;/a&gt;就近原则&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="英语" scheme="https://blog.mxne.cn/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
    <category term="英语" scheme="https://blog.mxne.cn/tags/%E8%8B%B1%E8%AF%AD/"/>
    
    <category term="主谓一致" scheme="https://blog.mxne.cn/tags/%E4%B8%BB%E8%B0%93%E4%B8%80%E8%87%B4/"/>
    
  </entry>
  
  <entry>
    <title>疑问句</title>
    <link href="https://blog.mxne.cn/posts/b10.html"/>
    <id>https://blog.mxne.cn/posts/b10.html</id>
    <published>2023-01-22T10:13:33.000Z</published>
    <updated>2023-04-29T08:06:43.724Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是疑问句？"><a href="#什么是疑问句？" class="headerlink" title="什么是疑问句？"></a>什么是疑问句？</h3><blockquote><p>疑问句（Question Sentences）是一种用来询问信息或确认某些信息的句子。</p><p>疑问句包括：<strong>一般疑问句、特殊疑问句、选择疑问句和反意疑问句</strong>.</p></blockquote><h3 id="一般疑问句："><a href="#一般疑问句：" class="headerlink" title="一般疑问句："></a>一般疑问句：</h3><blockquote><p>一般疑问句是指询问陈述句的真假，通常以助动词(do/does/did/can/could/will/would/may/might等)、be动词(is/am/are/was/were等)、情态动词或一些实义动词(如have/has等)作为句首形式，构成一个疑问句。</p></blockquote><p>回答用yes或no</p><p>形式：助动词/情态动词/Be动词+主语+动词+其他+?</p><h4 id="陈述句变一般疑问句"><a href="#陈述句变一般疑问句" class="headerlink" title="陈述句变一般疑问句"></a>陈述句变一般疑问句</h4><h4 id="1-有助动词-情态动词-be动词"><a href="#1-有助动词-情态动词-be动词" class="headerlink" title="1.有助动词/情态动词/be动词"></a>1.有助动词/情态动词/be动词</h4><p>将助动词/be动词/情态动词提前（应该是同部分倒装）</p><p>It is windy today.<br>Is it windy today?<br>我们再多看几个一般疑问句的例子：<br>She is sad. → Is she sad?<br>她很难过。 → 她难过吗？<br>The boat is sinking. → Is the boat sinking?<br>船在下沉。 → 船在下沉吗？<br>He can bake. → Can he bake?<br>他会烘焙。 → 他会烘焙吗？</p><h4 id="2-无助动词-情态动词-be动词"><a href="#2-无助动词-情态动词-be动词" class="headerlink" title="2.无助动词/情态动词/be动词"></a>2.无助动词/情态动词/be动词</h4><p>句首加上do或者does，注意调整时态，谓语动词变原型。（同部分倒装）</p><p>Nina plays the violin.→ Does Nina play the violin?<br>Nina played the violin.→ Did Nina play the violin?<br>Nina and Thomas play the violin.→ Do Nina and Thomas play the violin?</p><h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><p>陈述句 改 一般疑问句，与部分倒装相同。</p><h3 id="特殊疑问句："><a href="#特殊疑问句：" class="headerlink" title="特殊疑问句："></a>特殊疑问句：</h3><blockquote><p>特殊疑问句（wh-questions）是一种用来询问特定信息的疑问句，通常以 wh- 词（如 what、when、where、who、why）引导</p><p>以特殊疑问词开头</p></blockquote><p>形式：Wh-词 + 助动词/情态动词/Be动词 + 主语 + 其他部分 + ?</p><p>这类句子用特殊疑问词来替代相应的句子成分。</p><h4 id="1-如果特殊疑问词充当主语"><a href="#1-如果特殊疑问词充当主语" class="headerlink" title="1.如果特殊疑问词充当主语"></a>1.如果特殊疑问词充当主语</h4><p>对主语成分提问，包括：主语部分的名词和主语部分的形容词提问。</p><p>用疑问词代替提问主语部分（名词或形容词）的词汇，用陈述语序进行提问。</p><p>Nathan is playing basketball in the park.</p><p>Who is playing basketball in the park.</p><p>Who can answer this question? 谁能回答这个问题?</p><p>Which book is more cheap? 哪本书更便宜些？</p><h4 id="2-特殊疑问词充当除了主语之外"><a href="#2-特殊疑问词充当除了主语之外" class="headerlink" title="2.特殊疑问词充当除了主语之外"></a>2.特殊疑问词充当除了主语之外</h4><p>对除去主语成分的其他成分提问。</p><p>先用特殊疑问词替换充当的成分（被提问的部分），将特殊疑问词提前，用一般疑问句的语序进行提问。<br>Nathan is playing what in the park?<br>然后再变换一下句子结构：<br>What is Nathan playing in the park?</p><p>When did you see him? 你什么时候见到他的？<br>Why are you late again? 你怎么又迟到了。</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>how far 多远</p><p>答：<br>1.用长度单位表示:It’s+路程(+from A to B)<br>2.用时间表示:It’s+数字+minutes’ walk</p><p>how long 多久</p><p>答：<br>1.It takes sb.+时间+to do sth.<br>2.It’s about+时间段</p><p>how often 每隔多久，问频率<br>答语常用once a week, three times a month 等。</p><p>how soon 再过多久<br>对表示将来的一段时间提问<br>答语常用“in+时间段”</p><p>how many 多少<br>对数量进行提问<br>直接回答数量</p><h3 id="选择疑问句"><a href="#选择疑问句" class="headerlink" title="选择疑问句"></a>选择疑问句</h3><blockquote><p>选择疑问句是用来询问有限的选项或选择的情况。</p></blockquote><ul><li>主语 + 助动词 + 选项1 + or + 选项2 + … + ?</li></ul><p>例如：Are you going to have pizza or pasta for dinner tonight?</p><ul><li>助动词/情态动词 + 主语 + 选项1 + or + 选项2 + … + ?</li></ul><p>例如：Can you speak French or German?</p><ul><li>Be动词 + 主语 + 选项1 + or + 选项2 + … + ?</li></ul><p>例如：Is today Monday or Tuesday?</p><ul><li>疑问词 + 助动词/情态动词 + 主语 + 选项1 + or + 选项2 + … + ?</li></ul><p>例如：What can I do for you today, coffee or tea?</p><ul><li>疑问词 + Be动词 + 主语 + 选项1 + or + 选项2 + … + ?</li></ul><p>例如：Which is your favorite color, blue or green?</p><h3 id="反义疑问句"><a href="#反义疑问句" class="headerlink" title="反义疑问句"></a>反义疑问句</h3><p>前一部分陈述句，后一部分是疑问句<br>疑问部分的人称、助动词、时态都应与陈述句一致<br>遵循：前肯后否/前否后肯（有特例）</p><p>将陈述句的助动词/情态动词（辅助作用的词）提到主语前。<br>与倒装句有一丢丢不同，倒装句的谓语是系动词时（只要看到助动词/情态动词/系动词 就提前），部分倒装都需要将系动词提到主语前</p><p>无视陈述句的否定，然后正常回答</p><h4 id="常见考点"><a href="#常见考点" class="headerlink" title="常见考点"></a>常见考点</h4><p>1.陈述部分主语为somebody, nobody, anybody, everybody时，反义疑问句的主语用they，有时用he。</p><p>2.陈述部分主语为something, nothing, anything, everything等表物的不定代词时，反义疑问句的主语用it。</p><p>3.陈述句部分为there be结构时，反问疑问句部分用be (not) there。在此句型中be可用live, appear, come, exist, happen, stand, lie, seem, remain, flow等替代，这时反义疑问句部分用don’t/doesn’t/didn’t there<br>eg:<br>There is a tree, isn’t there?<br>There seems to be something wrong with the machine, doesn’t there?</p><p>4.陈述部分带否定或半否定的词时，反问疑问句用肯定<br>no, seldom, hardly, never, rarely, few, little, nothing, nobody</p><p>5.陈述部分有加前缀或后缀(im…, un…, dis…)构成的表否定意义的词时，反义疑问句仍用否定<br>He dislikes swimming, doesn’t he?</p><p>6.陈述部分用I’am …时，疑问部分用aren’t I<br>I am late, aren’t I?</p><p>7.当出现可以作助动词或情态动词短语又可以做实义动词的词时，要根据句意判断<br>She has a bottle of milk, dosen’t she? has的主动词为do，she为三单变does<br>She has wasted a bottle of milk, hasn’t she?</p><p>8.祈使句</p><ul><li>陈述部分 肯定祈使句，反义疑问句用 will you / will not you<br>Please open the door, will you?或will not you?</li><li>陈述部分 否定祈使句，反义疑问句用 will you<br>Please don’t open the door, will you?</li><li>祈使句部分为let us开头，反义疑问句为 will you<br>Let us go to our school, will you?</li><li>祈使句部分为let’s开头，反义疑问句为 shall we<br>Let’s go to our school, shall we?</li><li>祈使句除了let’s，其他都可以 will you<br>祈使句不分 前肯后否，前否后肯</li></ul><p>9.陈述句部分是主从句</p><ul><li>陈述句的 主句的主语 为 第一人称<br>反问疑问句和从句一致<br>I, we</li><li>陈述句的 主句的主语 为 第二、三人称<br>反问疑问句和主句一致</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;什么是疑问句？&quot;&gt;&lt;a href=&quot;#什么是疑问句？&quot; class=&quot;headerlink&quot; title=&quot;什么是疑问句？&quot;&gt;&lt;/a&gt;什么是疑问句？&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;疑问句（Question Sentences）是一种用来询问信息或确认某些</summary>
      
    
    
    
    <category term="英语" scheme="https://blog.mxne.cn/categories/%E8%8B%B1%E8%AF%AD/"/>
    
    
    <category term="英语" scheme="https://blog.mxne.cn/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>CIDR（无类域间路由）</title>
    <link href="https://blog.mxne.cn/posts/5a28.html"/>
    <id>https://blog.mxne.cn/posts/5a28.html</id>
    <published>2023-01-22T09:45:13.000Z</published>
    <updated>2023-04-29T08:06:43.689Z</updated>
    
    <content type="html"><![CDATA[<h3 id="你们能从192-168-1-1-24的到什么信息？"><a href="#你们能从192-168-1-1-24的到什么信息？" class="headerlink" title="你们能从192.168.1.1/24的到什么信息？"></a>你们能从192.168.1.1/24的到什么信息？</h3><p>大家常见的这种形式 其实就是一个CIDR网络地址，其中192.168.1.1是网络的地址（IP地址），/24指明了子网掩码的位数，即该网络的<strong>前24位为网络地址，后8位为主机地址。</strong></p><p>CIDR网络地址 具体标识方式为：<u>IP地址后加上“/”，“/”后的数字标识网络前缀长度，类似192.14.32.0/20的形式。</u></p><h3 id="为什么需要CIDR？"><a href="#为什么需要CIDR？" class="headerlink" title="为什么需要CIDR？"></a>为什么需要CIDR？</h3><p>在<strong>传统</strong>的IP地址分配中，<strong>IP地址由网络部分和主机部分组成</strong>，网络部分的长度由IP地址的类别决定，而主机部分的长度则由剩余的位数决定。</p><p>由于每个类别只能有一个网络前缀，因此导致了IP地址浪费的问题。因此，CIDR被引入，它支持不同长度的前缀，从而实现更加灵活的地址分配。避免了大量IP地址浪费的问题。</p><h3 id="前面说到了CIDR节约IP的地址的优势，那我们如何使用这种优势？"><a href="#前面说到了CIDR节约IP的地址的优势，那我们如何使用这种优势？" class="headerlink" title="前面说到了CIDR节约IP的地址的优势，那我们如何使用这种优势？"></a>前面说到了CIDR节约IP的地址的优势，那我们如何使用这种优势？</h3><ul><li>例如我们学校的某个机房，需要30个IP地址</li></ul><blockquote><p>在没有CIDR技术的情况下，我们会使用/24子网，这样会有许多IP用不到（浪费了226个）。<br>主机位有8位，就有因此就有：2^8 = 256个可分配ip<br>我们需要30个ip，256-30 = 226，因此，浪费了226个ip。<br>而CIDR可以避免浪费如此多的IP地址。<br>30 = 2^5-2<br><strong>1111 1111 1111 1111 1111 1111 111</strong>0 0000<br>因此我们可以使用/27子网，这样就不会存在浪费很多ip这一说了。</p></blockquote><ul><li>例如一个办公室有100个人</li></ul><blockquote><p>2^7 - 2 = 126<br>126 &gt; 100<br>那么就可以分配一个网络前缀为32-7=25位的网络</p></blockquote><ul><li>例如一个办公室人比较少，仅有5个人左右</li></ul><blockquote><p>2^3 - 2 = 6<br>6 &gt; 4<br>那么就可以分配一个网络前缀为32-3=29位的网络</p></blockquote><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>使用传统给的子网划分，会浪费许多宝贵的IP地址；</p><p>而使用CIDR技术后，网络管理员可以根据需求来分配IP地址，不在受固定的划分规则所限制，更加灵活的利用的IP地址，避免了不必要的浪费。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;你们能从192-168-1-1-24的到什么信息？&quot;&gt;&lt;a href=&quot;#你们能从192-168-1-1-24的到什么信息？&quot; class=&quot;headerlink&quot; title=&quot;你们能从192.168.1.1/24的到什么信息？&quot;&gt;&lt;/a&gt;你们能从192.168</summary>
      
    
    
    
    <category term="计算机网络" scheme="https://blog.mxne.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="计算机网络" scheme="https://blog.mxne.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>2023新年快乐</title>
    <link href="https://blog.mxne.cn/posts/4b65.html"/>
    <id>https://blog.mxne.cn/posts/4b65.html</id>
    <published>2023-01-22T03:12:49.000Z</published>
    <updated>2023-04-29T08:06:43.707Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h2><p>兔年到了，愿你的事业如虎攀翠竹，扶摇直上;愿你的身体似虎般灵动，平安健康；愿你的工作像虎捕食猎物，充满激情；愿你的不幸像虎一样冬眠，沉睡不醒。愿你兔年快乐，幸福开心！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;新年快乐&quot;&gt;&lt;a href=&quot;#新年快乐&quot; class=&quot;headerlink&quot; title=&quot;新年快乐&quot;&gt;&lt;/a&gt;新年快乐&lt;/h2&gt;&lt;p&gt;兔年到了，愿你的事业如虎攀翠竹，扶摇直上;愿你的身体似虎般灵动，平安健康；愿你的工作像虎捕食猎物，充满激情；愿你的不幸像虎一</summary>
      
    
    
    
    <category term="其他" scheme="https://blog.mxne.cn/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="新年祝福" scheme="https://blog.mxne.cn/tags/%E6%96%B0%E5%B9%B4%E7%A5%9D%E7%A6%8F/"/>
    
  </entry>
  
  <entry>
    <title>私有部署meting</title>
    <link href="https://blog.mxne.cn/posts/b31e.html"/>
    <id>https://blog.mxne.cn/posts/b31e.html</id>
    <published>2023-01-20T12:54:44.000Z</published>
    <updated>2023-04-29T08:06:43.694Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近Aplayer无法使用使用了，然后我就看到了有人出解决办法了，然后我试着做了下，成功了，就写了这个</p><h2 id="Vercel部署"><a href="#Vercel部署" class="headerlink" title="Vercel部署"></a>Vercel部署</h2><p>1）点击下方按钮，进行Vercel部署<br><a href="https://vercel.com/new/clone?repository-url=https://github.com/ladjeek-actions/vercel-meting"><img src="https://vercel.com/button" alt="跳转到Vercel"></a></p><p>2）给仓库设置个名字，点击 <code>create</code></p><p><img src="https://s1.vika.cn/space/2023/01/20/05ba6170fe664f25a54242f5077d0b27" alt="Snipaste_2023-01-20_21-10-28"></p><p>3）部署成功，显示下面的样子</p><p><img src="https://s1.vika.cn/space/2023/01/20/afdfba5895fb483aa9f7dd9dbc5447c6" alt="Snipaste_2023-01-20_21-09-49"></p><h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><p>点击 <code>Settings</code>，点击 <code>Domains</code>，设置个域名，点击 <code>Add</code> 然后进入自己的域名控制器中进行解析</p><p><img src="https://s1.vika.cn/space/2023/01/20/95c32d7416f24d929344a8535976da97" alt="Snipaste_2023-01-20_21-19-24"></p><h2 id="编辑文件"><a href="#编辑文件" class="headerlink" title="编辑文件"></a>编辑文件</h2><p>编辑 <code>[Blogroot]\themes\butterfly\layout\includes\third-party\aplayer.pug</code>文件</p><p>注意：把 <code>https://meting.lmx0.top/</code>替换成刚刚你刚刚vercel部署的域名</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">link(rel=&#x27;stylesheet&#x27; href=url_for(theme.asset.aplayer_css) media=&quot;print&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;)</span><br><span class="line">script(src=url_for(theme.asset.aplayer_js))</span><br><span class="line">script(src=url_for(theme.asset.meting_js))</span><br><span class="line"><span class="addition">+script.</span></span><br><span class="line"><span class="addition">+  var meting_api=&#x27;https://meting.lmx0.top/api/?server=:server&amp;type=:type&amp;id=:id&amp;auth=:auth&amp;r=:r&#x27;;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近Aplayer无法使用使用了，然后我就看到了有人出解决办法了，然后我试着做了下，成功了，就写了这个&lt;/p&gt;
&lt;h2 id=&quot;Vercel</summary>
      
    
    
    
    <category term="Hexo" scheme="https://blog.mxne.cn/categories/Hexo/"/>
    
    
    <category term="hexo" scheme="https://blog.mxne.cn/tags/hexo/"/>
    
    <category term="butterfly" scheme="https://blog.mxne.cn/tags/butterfly/"/>
    
  </entry>
  
  <entry>
    <title>选择排序</title>
    <link href="https://blog.mxne.cn/posts/c803.html"/>
    <id>https://blog.mxne.cn/posts/c803.html</id>
    <published>2023-01-20T09:18:58.000Z</published>
    <updated>2023-04-29T08:06:43.734Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是选择排序？"><a href="#什么是选择排序？" class="headerlink" title="什么是选择排序？"></a>什么是选择排序？</h3><blockquote><p>它的工作原理是：第一次从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，然后再从剩余的未排序元素中寻找到最小（大）元素，然后放到已排序的序列的末尾。 以此类推，直到全部待排序的数据元素的个数为零</p></blockquote><p><img src="https://bu.dusays.com/2023/02/20/63f33b30c23cb.gif" alt="冒泡排序动图演示"></p><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>在未排序序列中找到最小（大）元素，将其与第一个元素交换</p><p>在未排序序列中找到最小（大）元素，将其与第二个元素交换</p><p>…</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> arr[] = &#123; <span class="number">10</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span> &#125;;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> min = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; sz; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[min] &gt; arr[j])</span><br><span class="line">            &#123;</span><br><span class="line">                min = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> tmp = arr[i];</span><br><span class="line">        arr[i] = arr[min];</span><br><span class="line">        arr[min] = tmp;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;第%d轮：&quot;</span>, i+<span class="number">1</span>);</span><br><span class="line">        printArr(arr,sz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">printArr</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">第<span class="number">1</span>轮：<span class="number">1</span> <span class="number">9</span> <span class="number">8</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">10</span></span><br><span class="line">第<span class="number">2</span>轮：<span class="number">1</span> <span class="number">2</span> <span class="number">8</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line">第<span class="number">3</span>轮：<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line">第<span class="number">4</span>轮：<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">6</span> <span class="number">5</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line">第<span class="number">5</span>轮：<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line">第<span class="number">6</span>轮：<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line">第<span class="number">7</span>轮：<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line">第<span class="number">8</span>轮：<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br><span class="line">第<span class="number">9</span>轮：<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="写成函数"><a href="#写成函数" class="headerlink" title="写成函数"></a>写成函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">selectionSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> min = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; sz; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[min] &gt; arr[j])</span><br><span class="line">            &#123;</span><br><span class="line">                min = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> tmp = arr[i];</span><br><span class="line">        arr[i] = arr[min];</span><br><span class="line">        arr[min] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;什么是选择排序？&quot;&gt;&lt;a href=&quot;#什么是选择排序？&quot; class=&quot;headerlink&quot; title=&quot;什么是选择排序？&quot;&gt;&lt;/a&gt;什么是选择排序？&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;它的工作原理是：第一次从待排序的数据元素中选出最小（或最大）的一个</summary>
      
    
    
    
    <category term="C语言" scheme="https://blog.mxne.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="编程题" scheme="https://blog.mxne.cn/tags/%E7%BC%96%E7%A8%8B%E9%A2%98/"/>
    
    <category term="C语言" scheme="https://blog.mxne.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>插入排序</title>
    <link href="https://blog.mxne.cn/posts/c40e.html"/>
    <id>https://blog.mxne.cn/posts/c40e.html</id>
    <published>2023-01-20T09:18:48.000Z</published>
    <updated>2023-04-29T08:06:43.730Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是插入排序？"><a href="#什么是插入排序？" class="headerlink" title="什么是插入排序？"></a>什么是插入排序？</h3><blockquote><p>插入排序是指在待排序的元素中，假设前面n-1(其中n&gt;=2)个数已经是排好顺序的，现将第n个数插到前面已经排好的序列中，然后找到合适自己的位置，使得插入第n个数的这个序列也是排好顺序的。 按照此法对所有元素进行插入，直到整个序列排为有序的过程，称为插入排序 。</p></blockquote><p><img src="https://bu.dusays.com/2023/02/20/63f33b4f9227a.gif" alt="img"></p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> arr[] = &#123; <span class="number">10</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span> &#125;;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="type">int</span> tmp;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = i; (j &gt; <span class="number">0</span>) &amp;&amp; (arr[j]&lt;arr[j<span class="number">-1</span>]); j--)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = arr[j];</span><br><span class="line">            arr[j] = arr[j - <span class="number">1</span>];</span><br><span class="line">            arr[j - <span class="number">1</span>] = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;第%d轮：&quot;</span>, i);</span><br><span class="line">        printArr(arr,sz);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">printArr</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sz; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">第<span class="number">1</span>轮：<span class="number">9</span> <span class="number">10</span> <span class="number">8</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line">第<span class="number">2</span>轮：<span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">7</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line">第<span class="number">3</span>轮：<span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">6</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line">第<span class="number">4</span>轮：<span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">5</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line">第<span class="number">5</span>轮：<span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">4</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line">第<span class="number">6</span>轮：<span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line">第<span class="number">7</span>轮：<span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line">第<span class="number">8</span>轮：<span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span> <span class="number">1</span></span><br><span class="line">第<span class="number">9</span>轮：<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><h3 id="写成函数"><a href="#写成函数" class="headerlink" title="写成函数"></a>写成函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">insertionSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> sz)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="type">int</span> tmp;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = i; (j &gt; <span class="number">0</span>) &amp;&amp; (arr[j]&lt;arr[j<span class="number">-1</span>]); j--)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = arr[j];</span><br><span class="line">            arr[j] = arr[j - <span class="number">1</span>];</span><br><span class="line">            arr[j - <span class="number">1</span>] = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;什么是插入排序？&quot;&gt;&lt;a href=&quot;#什么是插入排序？&quot; class=&quot;headerlink&quot; title=&quot;什么是插入排序？&quot;&gt;&lt;/a&gt;什么是插入排序？&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;插入排序是指在待排序的元素中，假设前面n-1(其中n&amp;gt;=2)</summary>
      
    
    
    
    <category term="C语言" scheme="https://blog.mxne.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="编程题" scheme="https://blog.mxne.cn/tags/%E7%BC%96%E7%A8%8B%E9%A2%98/"/>
    
    <category term="C语言" scheme="https://blog.mxne.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>CSS浮动</title>
    <link href="https://blog.mxne.cn/posts/2cf.html"/>
    <id>https://blog.mxne.cn/posts/2cf.html</id>
    <published>2023-01-20T02:48:21.000Z</published>
    <updated>2023-04-29T08:06:43.702Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传统网页布局方式"><a href="#传统网页布局方式" class="headerlink" title="传统网页布局方式"></a>传统网页布局方式</h2><p>网页布局的本质——用 CSS 来摆放盒子，把盒子放到相应位置</p><ul><li>普通流</li><li>浮动</li><li>定位</li></ul><h3 id="标准流（普通流-文档流）"><a href="#标准流（普通流-文档流）" class="headerlink" title="标准流（普通流/文档流）"></a>标准流（普通流/文档流）</h3><p>标准流，就是标签按照规定好的默认方式排列。</p><ol><li>块级元素会独占一行，从上到下顺序排列 常用元素：div、hr、p、h1-h6、ul、ol、dl、form、table</li><li>行内元素会按照顺序，从左到右顺序排列，碰到父元素边缘则自动换行。 常用元素：span、a、i、em</li></ol><p>标准流是最基本的布局方式。</p><p>以上三种方式都是来摆放盒子的，盒子摆到合适位置，布局自然就完成了。</p><p>实际开发中，一个页面基本包含三种布局方式。</p><h3 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h3><p>很多布局效果，<strong>标准流没办法完成</strong>，此时就可以利用浮动完成布局。<strong>浮动可以改变元素标签默认排列方式。</strong>如 让<strong>多个块级元素一行显示。</strong></p><p>网页布局第一准则：多个块级元素 <strong>纵向</strong> 排列找 <strong>标准流</strong>，多个块级元素 <strong>横向</strong> 排列找 <strong>浮动</strong>。</p><p>网页布局第二准则：先设置盒子大小，再设置盒子位置。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">none元素不浮动</span></span><br><span class="line"><span class="comment">left元素向左浮动</span></span><br><span class="line"><span class="comment">right元素向右浮动</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">选择器 &#123; <span class="attribute">float</span>: 属性值; &#125;</span><br></pre></td></tr></table></figure><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><ol><li><p>浮动元素会脱离标准流，移动到指定位置（<strong>脱标</strong>）；浮动的盒子 <strong>不占位置</strong>，会漂浮在文档流的盒子上面（浮在空中，不占位置）</p></li><li><p>如果多个盒子都设置了浮动，则它们会按照属性值 <strong>一行显示</strong> 并且 <strong>顶端对齐排列</strong>。 浮动的元素是相互贴在一起的（<strong>盒子间没有间隙</strong>），若父级 <strong>宽度放不下盒子</strong>，多出的盒子会 <strong>另起一行</strong>对齐。</p></li><li>浮动的元素会 <strong>具有行内块元素的特性</strong>，<strong>任何元素</strong>都可以浮动，增加浮动后具有行内块元素相似特性。如果块级盒子没有设置宽度，默认宽度和父级一样宽，但是添加浮动后，它的大小根据内容来决定</li></ol><blockquote><p>浮动元素经常和标准流父级元素搭配使用：先用标准流父元素上下排列位置，之后内部子元素采取浮动排列左右位置，符合网页布局第一准则。（大盒子束约小盒子）</p></blockquote><p>未完待续…</p><h4 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h4><p>为什么要清楚浮动：由于父级盒子很多情况下，不方便给高度，当时盒子浮动又不占有位置，最后父级盒子高度为 0 时，就会影响下面的盒子，对后面元素排版产生影响。</p><h4 id="清除浮动的本质"><a href="#清除浮动的本质" class="headerlink" title="清除浮动的本质"></a>清除浮动的本质</h4><ul><li>清除浮动的本质是清除浮动元素脱离标准流造成的影响</li><li>如果父盒子本身具有高度，则不需要清除浮动</li><li>清除浮动之后，父级会根据浮动的子盒子自动检测高度，父级有了高度，就不会影响下面的标准流了。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">属性值</span></span><br><span class="line"><span class="comment">left不允许左侧有浮动元素</span></span><br><span class="line"><span class="comment">right不允许右侧有浮动元素</span></span><br><span class="line"><span class="comment">both同时清除左右两侧浮动</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">选择器: &#123;</span><br><span class="line">  <span class="attribute">clear</span>: 属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="清除浮动的方法"><a href="#清除浮动的方法" class="headerlink" title="清除浮动的方法"></a>清除浮动的方法</h4><ol><li><strong>额外标签法（隔墙法）</strong>，是 W3C 推荐的方法</li><li>父级添加 overflow 属性</li><li>父级添加 after 伪元素</li><li>父级添加双伪元素</li></ol><h5 id="额外标签法"><a href="#额外标签法" class="headerlink" title="额外标签法"></a>额外标签法</h5><p>额外标签法是在最后一个 <strong>浮动元素末尾</strong> 添加一个 <strong>空块级元素</strong>，给其赋以属性 <code>clear:both;</code></p><h5 id="父级添加-overflow"><a href="#父级添加-overflow" class="headerlink" title="父级添加 overflow"></a>父级添加 overflow</h5><p>给 <strong>父级</strong> 添加 <code>overflow</code> 属性，将其属性设置为 <code>hidden</code>、<code>auto</code>或<code>scroll</code>。</p><h5 id="父级添加-after"><a href="#父级添加-after" class="headerlink" title="父级添加 after"></a>父级添加 after</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">  <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">  <span class="comment">/*IE6、7专有*/</span></span><br><span class="line">  *zoom: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="父级添加双伪元素"><a href="#父级添加双伪元素" class="headerlink" title="父级添加双伪元素"></a>父级添加双伪元素</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">  *zoom: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="清除浮动的方法总结"><a href="#清除浮动的方法总结" class="headerlink" title="清除浮动的方法总结"></a>清除浮动的方法总结</h4><div class="table-container"><table><thead><tr><th>清除浮动的方式</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>额外标签法（隔墙法）</td><td>通俗易懂，书写方便</td><td>添加许多无意义的标签，结构化较差</td></tr><tr><td>父级 verflow:hidden</td><td>书写简单</td><td>溢出隐藏</td></tr><tr><td>父级 after 伪元素</td><td>结构语义化正确</td><td>由于IE6-7不支持:after，兼容性问题</td></tr><tr><td>父级双伪元素</td><td>结构语义化正确</td><td>由于IE6-7不支持:after，兼容性问题</td></tr></tbody></table></div><h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;传统网页布局方式&quot;&gt;&lt;a href=&quot;#传统网页布局方式&quot; class=&quot;headerlink&quot; title=&quot;传统网页布局方式&quot;&gt;&lt;/a&gt;传统网页布局方式&lt;/h2&gt;&lt;p&gt;网页布局的本质——用 CSS 来摆放盒子，把盒子放到相应位置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;普通</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.mxne.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="https://blog.mxne.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://blog.mxne.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>侧边栏公众号</title>
    <link href="https://blog.mxne.cn/posts/161a.html"/>
    <id>https://blog.mxne.cn/posts/161a.html</id>
    <published>2023-01-19T11:11:35.000Z</published>
    <updated>2023-04-29T08:06:43.697Z</updated>
    
    <content type="html"><![CDATA[<div class="note info no-icon flat"><p><strong>魔改前须知</strong></p><ol><li>魔改有风险，<strong>记得备份</strong>。</li><li>鉴于每个人的根目录名称都不一样，本帖 <strong>博客根目录</strong> 一律以<code>[BlogRoot]</code>指代。</li><li>涉及魔改源码的内容，会使用<strong>diff代码块</strong>标识，复制时请<strong>不要忘记删除</strong>前面的<code>+、-</code>符号。</li><li>引入 <strong>自定义的css与js文件</strong>，方法见 <a href="https://b.leonus.cn/2022/custom.html">Hexo博客添加自定义css和js文件</a></li><li><code>themes/butterfly</code> 等同于 <code>/node_modules/hexo-theme-butterfly</code></li></ol></div><p>效果：见<a href="https://www.lmx0.top/">主页则边栏</a><br>1）在 <code>BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/widget</code> 文件夹下新建<code>card_wx.pug</code> 文件， 填入以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#card-wechat.card-widget.tzy-right-widget</span><br><span class="line">    #flip-wrapper</span><br><span class="line">      #flip-content</span><br><span class="line">        .face</span><br><span class="line">        .back.face</span><br></pre></td></tr></table></figure><p>2）在<code>BlogRoot/node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug</code>中引入 <code>card_wx.pug</code></p><p>注意：删除<code>+</code>即可，无需加空格</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#aside-content.aside-content</span><br><span class="line">  //- post</span><br><span class="line">  if is_post()</span><br><span class="line">    - const tocStyle = page.toc_style_simple</span><br><span class="line">    - const tocStyleVal = tocStyle <span class="comment">=== true || tocStyle === false ? tocStyle : theme.toc.style_simple</span></span><br><span class="line">    if showToc &amp;&amp; tocStyleVal</span><br><span class="line">      .sticky_layout</span><br><span class="line">        include ./card_post_toc.pug</span><br><span class="line">    else</span><br><span class="line">      !=partial(&#x27;includes/widget/card_author&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      //- 文章页显示，文章页不需要展示的话，就不用加</span><br><span class="line"><span class="addition">+      !=partial(&#x27;includes/widget/card_wx&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span></span><br><span class="line">      !=partial(&#x27;includes/widget/card_announcement&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      !=partial(&#x27;includes/widget/card_top_self&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      .sticky_layout</span><br><span class="line">        if showToc</span><br><span class="line">          include ./card_post_toc.pug</span><br><span class="line">        !=partial(&#x27;includes/widget/card_recent_post&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">        !=partial(&#x27;includes/widget/card_ad&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">  else</span><br><span class="line">    //- page</span><br><span class="line">    !=partial(&#x27;includes/widget/card_author&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">    //- 主页显示</span><br><span class="line"><span class="addition">+    !=partial(&#x27;includes/widget/card_wx&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span></span><br><span class="line">    !=partial(&#x27;includes/widget/card_announcement&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">    !=partial(&#x27;includes/widget/card_weibo&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">    !=partial(&#x27;includes/widget/card_top_self&#x27;, &#123;&#125;, &#123;cache: true&#125;)      </span><br><span class="line"></span><br><span class="line">    .sticky_layout</span><br><span class="line">      if showToc</span><br><span class="line">        include ./card_post_toc.pug</span><br><span class="line">      !=partial(&#x27;includes/widget/card_friend_link&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      !=partial(&#x27;includes/widget/card_recent_post&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      !=partial(&#x27;includes/widget/card_ad&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      !=partial(&#x27;includes/widget/card_newest_comment&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      !=partial(&#x27;includes/widget/card_categories&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      !=partial(&#x27;includes/widget/card_tags&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      !=partial(&#x27;includes/widget/card_archives&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      !=partial(&#x27;includes/widget/card_webinfo&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">      !=partial(&#x27;includes/widget/card_bottom_self&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br></pre></td></tr></table></figure><p>3）在 <code>[BlogRoot]\source\css\custom.css</code> 增加如下代码，可以将<code>background: var(--lmx0-theme) !important;</code>改为自己的主题色。</p><p>图片自取（下面css），自行ps。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 公众号 start */</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&#x27;light&#x27;</span>]</span> <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span><span class="selector-id">#card-wechat</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--lmx0-theme) <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span><span class="selector-id">#card-wechat</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--card-bg);</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-content</span>: center;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">110px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 如果你设置了aside 的 mobile 为 false，记得放开下面这段注释；</span></span><br><span class="line"><span class="comment"> 如果你设置了aside 的 mobile 为 true ，不需要改动。 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* @media screen and (max-width: 768px) &#123;</span></span><br><span class="line"><span class="comment">  #aside-content .card-widget#card-wechat &#123;</span></span><br><span class="line"><span class="comment">      display: none !important;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">&#125; */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">1300px</span>) &#123;</span><br><span class="line">  <span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">      <span class="attribute">margin-top</span>: <span class="number">1rem</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#flip-wrapper</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">perspective</span>: <span class="number">1000</span>;</span><br><span class="line">  <span class="attribute">perspective</span>: <span class="number">1000</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">235px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">110px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#flip-wrapper</span><span class="selector-pseudo">:hover</span> <span class="selector-id">#flip-content</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#flip-content</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  -webkit-<span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">  <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">  <span class="attribute">transition</span>: <span class="built_in">cubic-bezier</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1.29</span>) <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.face</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  -webkit-<span class="attribute">backface-visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">backface-visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://img.zhheo.com/i/2022/08/31/630efc6e3e794.png</span>) center center no-repeat;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.back</span><span class="selector-class">.face</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">https://s1.vika.cn/space/2023/01/18/094535637deb43548746e730e520c021</span>) center center no-repeat;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 公众号 end */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note info no-icon flat&quot;&gt;&lt;p&gt;&lt;strong&gt;魔改前须知&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;魔改有风险，&lt;strong&gt;记得备份&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;鉴于每个人的根目录名称都不一样，本帖 &lt;strong&gt;</summary>
      
    
    
    
    <category term="Hexo" scheme="https://blog.mxne.cn/categories/Hexo/"/>
    
    
    <category term="hexo" scheme="https://blog.mxne.cn/tags/hexo/"/>
    
    <category term="butterfly" scheme="https://blog.mxne.cn/tags/butterfly/"/>
    
    <category term="魔改" scheme="https://blog.mxne.cn/tags/%E9%AD%94%E6%94%B9/"/>
    
  </entry>
  
  <entry>
    <title>CSS盒子模型</title>
    <link href="https://blog.mxne.cn/posts/fb5d.html"/>
    <id>https://blog.mxne.cn/posts/fb5d.html</id>
    <published>2023-01-19T09:20:33.000Z</published>
    <updated>2023-04-29T08:06:43.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p>CSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，包括：<u>边框、外边距、内边距和实际内容。</u></p><h3 id="边框（border）"><a href="#边框（border）" class="headerlink" title="边框（border）"></a>边框（border）</h3><p>border 可以设置元素边框。边框有三个组成：<code>border-width</code>、<code>border-style</code>、<code>border-color</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">属性可连写</span></span><br><span class="line"><span class="comment">border-width：定义边框粗细，单位 px</span></span><br><span class="line"><span class="comment">border-style：边框样式</span></span><br><span class="line"><span class="comment">border-color：边框颜色</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="attribute">border</span>: border-width || border-style || border-color;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 简写 */</span></span><br><span class="line"><span class="attribute">border</span>: <span class="number">5px</span> solid pink;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 分开写 分别指定上下左右*/</span></span><br><span class="line"><span class="attribute">border-top</span>: <span class="number">1px</span> solid red;</span><br></pre></td></tr></table></figure><h4 id="表格的细线边框"><a href="#表格的细线边框" class="headerlink" title="表格的细线边框"></a>表格的细线边框</h4><p><code>border-collapse</code> 属性控制浏览器绘制 <strong>表格边框</strong> 的方式。它控制相邻单元格的边框（<strong><u>合并</u>相邻边框</strong>）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 表示将相邻边框合并在一起 */</span></span><br><span class="line"><span class="attribute">border-collapse</span>: collapse;</span><br></pre></td></tr></table></figure><h4 id="边框会影响盒子实际大小"><a href="#边框会影响盒子实际大小" class="headerlink" title="边框会影响盒子实际大小"></a>边框会影响盒子实际大小</h4><p>边框会额外增加盒子的实际大小</p><h3 id="内边距（padding）"><a href="#内边距（padding）" class="headerlink" title="内边距（padding）"></a>内边距（padding）</h3><p><code>padding</code> 属性设置内边距，即 <strong>边框与内容之间的距离</strong>。</p><ul><li><code>padding-left</code>: 左内边距</li><li><code>padding-right</code>: 右内边距</li><li><code>padding-top</code>: 上内边距</li><li><code>padding-bottotm</code>: 下内边距</li></ul><p>简写</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">- 1 个值：上下左右</span></span><br><span class="line"><span class="comment">- 2 个值：上下，左右</span></span><br><span class="line"><span class="comment">- 3 个值：上，左右，下</span></span><br><span class="line"><span class="comment">- 4 个值：上，右，下，左，顺时针</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span>;</span><br></pre></td></tr></table></figure><h4 id="padding-会影响盒子实际大小"><a href="#padding-会影响盒子实际大小" class="headerlink" title="padding 会影响盒子实际大小"></a>padding 会影响盒子实际大小</h4><p><strong>当盒子已经有了宽度和高度，再指定内边距</strong>(前提)，会撑大盒子。要保证盒子和效果图一样大，则让 <code>width/height</code>-多出来的内边距大小即可。</p><p>当给盒子指定了 <code>padding</code> 值以后，发生了两件事情：</p><ol><li>内容和边框有了距离，<strong>增加内边距</strong></li><li>padding 值 <strong>影响了盒子实际大小</strong></li></ol><h3 id="外边距（margin）"><a href="#外边距（margin）" class="headerlink" title="外边距（margin）"></a>外边距（margin）</h3><p><code>margin</code> 属性用于设置外边距，即 <strong>控制盒子与盒子之间的距离</strong>。</p><ul><li><code>margin-left</code>: 左外边距</li><li><code>margin-right</code>: 右外边距</li><li><code>margin-top</code>: 上外边距</li><li><code>margin-bottotm</code>: 下外边距</li></ul><p>简写，同padding</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">- 1 个值：上下左右</span><br><span class="line">- 2 个值：上下，左右</span><br><span class="line">- 3 个值：上，左右，下</span><br><span class="line">- 4 个值：上，右，下，左，顺时针</span><br><span class="line">*/</span><br><span class="line">margin: 5px;</span><br><span class="line">margin: 5px 10px;</span><br><span class="line">margin: 5px 10px 20px;</span><br><span class="line">margin: 5px 10px 20px 30px;</span><br></pre></td></tr></table></figure><h4 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h4><p>外边距可以让<strong>块级盒子（块级元素）</strong> <strong>水平居中</strong>，但是必须满足两个条件：</p><ol><li>盒子 <strong>必须指定宽度</strong>（width）</li><li>盒子 <strong>左右</strong> 的外边距都设置为 <code>auto</code></li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">960px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;  <span class="comment">/* 最常用 */</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使 <strong>行内元素或行内块元素</strong> 水平居中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-align</span>: center;</span><br></pre></td></tr></table></figure><h4 id="嵌套块元素垂直外边距的塌陷"><a href="#嵌套块元素垂直外边距的塌陷" class="headerlink" title="嵌套块元素垂直外边距的塌陷"></a>嵌套块元素垂直外边距的塌陷</h4><p>对于两个嵌套关系的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。</p><p>解决方案</p><ol><li>为父元素定义上边框</li><li>为父元素定义上内边距</li><li>为父元素添加 <code>overflow:hidden</code></li></ol><h3 id="清除内外边距"><a href="#清除内外边距" class="headerlink" title="清除内外边距"></a>清除内外边距</h3><p>网页元素很多都带有默认内外边距，而且不同浏览器默认的也不一致，因此在布局前，要先清除网页元素的内外边距。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="圆角边框"><a href="#圆角边框" class="headerlink" title="圆角边框"></a>圆角边框</h2><p><code>border-radius</code> 属性用于设置元素的外边框圆角。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>: length;</span><br></pre></td></tr></table></figure><ul><li>参数可以为 数值 或 百分比</li><li><strong>正方形</strong> 变 圆，将数值修改为高度或者宽度的一般即可 或 <code>border-radius: 50%;</code></li><li>圆角矩形，将数值设置为 <code>height</code> 的一半就可以做</li><li>简写规律 同padding和margin</li><li>可分开写：<code>border-top-left-radius</code>、<code>border-top-right-radius</code>、<code>border-bottom-right-radius</code>、<code>border-bottom-left-radius</code></li></ul><h2 id="盒子阴影"><a href="#盒子阴影" class="headerlink" title="盒子阴影"></a>盒子阴影</h2><p>盒子阴影，使用 <code>box-shadow</code> 属性。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bxo-shadow: h-shadow v-shadow blur spread color inset;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>h-shadow</td><td>必需，水平阴影的位置，允许负值</td></tr><tr><td>v-shadow</td><td>必需，垂直阴影的位置，允许负值</td></tr><tr><td>blur</td><td>可选，模糊距离（影子的虚实）</td></tr><tr><td>spread</td><td>可选，阴影的尺寸</td></tr><tr><td>color</td><td>可选，阴影的颜色</td></tr><tr><td>inset</td><td>可选，将外部阴影改为内部阴影（默认是外部阴影）</td></tr></tbody></table></div><p>注意：</p><ol><li>默认是外阴影，但是 <strong>不可以写这个单词（outset）</strong></li><li>盒子阴影 <strong>不占空间</strong>，不会影响其他盒子排列</li></ol><h2 id="文字阴影"><a href="#文字阴影" class="headerlink" title="文字阴影"></a>文字阴影</h2><p><code>text-shadow</code> 属性设置文本阴影。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-shadow</span>: h-shadow v-shadow blur color;</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>h-shadow</td><td>必需，水平阴影位置。允许负值。</td></tr><tr><td>v-shadow</td><td>必须，垂直阴影。允许负值。</td></tr><tr><td>blur</td><td>可选，模糊距离。</td></tr><tr><td>color</td><td>可选，阴影颜色。</td></tr></tbody></table></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;盒子模型&quot;&gt;&lt;a href=&quot;#盒子模型&quot; class=&quot;headerlink&quot; title=&quot;盒子模型&quot;&gt;&lt;/a&gt;盒子模型&lt;/h2&gt;&lt;p&gt;CSS 盒子模型本质上是一个盒子，封装周围的 HTML 元素，包括：&lt;u&gt;边框、外边距、内边距和实际内容。&lt;/u&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.mxne.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="https://blog.mxne.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://blog.mxne.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS复合选择器与特性</title>
    <link href="https://blog.mxne.cn/posts/8f3.html"/>
    <id>https://blog.mxne.cn/posts/8f3.html</id>
    <published>2023-01-19T09:11:33.000Z</published>
    <updated>2023-04-29T08:06:43.700Z</updated>
    
    <content type="html"><![CDATA[<h2 id="css复合选择器"><a href="#css复合选择器" class="headerlink" title="css复合选择器"></a>css复合选择器</h2><ul><li>后代选择器</li><li>子选择器</li><li>并集选择器</li><li>伪类选择器</li></ul><h3 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h3><p>后代选择器又称为包含选择器，可以选择父元素里的子元素。写法是将外层标签写在前面，内层标签写在后面，中间 <strong>空格分开</strong>。</p><p>选择元素 1 里面所有的元素 2</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span> 元素<span class="number">2</span> &#123; 样式声明; &#125;</span><br></pre></td></tr></table></figure><h3 id="子选择器"><a href="#子选择器" class="headerlink" title="子选择器"></a>子选择器</h3><p>子元素选择器（子选择器）只能选择作为元素作为元素的最近一级子元素。简单理解就是选 <strong>亲儿子</strong>。元素之间用 <strong>大于号 <code>&gt;</code> 隔开</strong></p><p>注意： 元素 2 必须是亲儿子。最终选择的是元素 2</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span> &gt; 元素<span class="number">2</span> &#123; 样式声明; &#125;</span><br></pre></td></tr></table></figure><h3 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h3><p>选择多组标签，同时为他们定义相同的样式。通过 <strong>英文逗号 <code>,</code> 连接而成</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span>, 元素<span class="number">2</span> &#123; 样式声明; &#125;</span><br></pre></td></tr></table></figure><h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><p>用于 向某些选择器添加特殊的效果，用冒号 <code>:</code> 表示。</p><p>1）链接伪类选择器</p><p>要按照 <strong>LVHA</strong> 的顺序声明，hover 常用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> <span class="comment">/*选择所有未被访问的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> <span class="comment">/*选择所有已被访问的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> <span class="comment">/*选择鼠标指针位于其上的链接*/</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> <span class="comment">/*选择活动链接（鼠标按下未弹起的链接）*/</span></span><br></pre></td></tr></table></figure><p>2）focus 伪类选择器</p><p><code>:focus</code> 伪类选择器用于获取焦点的表单元素。一般和 <code>input</code> 搭配使用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>…</p><h3 id="复合选择器总结"><a href="#复合选择器总结" class="headerlink" title="复合选择器总结"></a>复合选择器总结</h3><div class="table-container"><table><thead><tr><th>选择器</th><th>作用</th><th>特征</th><th>使用情况</th><th>隔开符号及用法</th></tr></thead><tbody><tr><td>后代选择器</td><td>用来选择后代元素</td><td>可以是子孙后代</td><td>较多</td><td>符号是空格 <code>.nav a</code></td></tr><tr><td>子代选择器</td><td>选择最近一级元素</td><td>只能选亲儿子</td><td>较少</td><td>符号是大于 <code>.nav&gt;p</code></td></tr><tr><td>并集选择器</td><td>选择某些相同样式的元素</td><td>可以用于集体声明</td><td>较多</td><td>符号是逗号，<code>.nav, a</code></td></tr><tr><td>链接伪类选择器</td><td>选择不同状态的链接</td><td>跟链接相关</td><td>较多</td><td>重点记住<code>a&#123;&#125;</code>和<code>a:hover&#123;&#125;</code></td></tr><tr><td>:focus 选择器</td><td>选择获得光标的表单</td><td>跟表单相关</td><td>较少</td><td>记住<code>input:focus</code>用法</td></tr></tbody></table></div><h2 id="元素显示模式"><a href="#元素显示模式" class="headerlink" title="元素显示模式"></a>元素显示模式</h2><p>HTML 元素分为 <strong>块元素</strong> 和 <strong>行内元素</strong>。</p><h3 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h3><p>常见的块元素有 <code>h1-h6</code>、<code>p</code>、<code>div</code>、<code>ul</code>、<code>ol</code>、<code>li</code>等。</p><p>块元素特点：</p><ol><li><strong>独占一行</strong>。</li><li><u>高度、宽度、外边距以及内边距都可以控制。</u></li><li><strong>宽度</strong>默认是容器<strong>（父级宽度）的 100%</strong>。</li><li>是一个容器及盒子，里面可以方行内或块级元素。</li></ol><p>注意：</p><ul><li>文字类的标签内不能放块级元素。</li><li>文字类元素有 <code>p</code>，<code>h1-h6</code>，尤其不能放 <code>div</code> 元素。</li></ul><h3 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h3><p>常见行内元素：<code>a</code>、<code>strong</code>、<code>b</code>、<code>em</code>、<code>i</code>、<code>del</code>、<code>s</code>、<code>ins</code>、<code>u</code>、<code>span</code>，典型行内元素是 <code>span</code>，行内元素也叫内联元素。</p><p>行内元素特点</p><ol><li>相邻行内元素在一行上，<strong>一行可以显示多个</strong>。</li><li>高、宽直接设置是无效的。</li><li>默认<strong>宽度</strong>就是它本身<strong>内容宽度</strong>。</li><li>行内元素只能容纳文本或其他行内元素。</li></ol><p>注意</p><ul><li>a 链接里面不能放链接</li><li>特殊情况链接 a 里面可以放块级元素，但是给 a 转换一下块级模式最安全。</li></ul><h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><p>在行内元素中有几个特殊标签——<code>img</code>, <code>input</code>、<code>td</code>，它们 <strong>同时具有块元素和行内元素的特点</strong>。</p><p>行内块元素的特点</p><ol><li>和相邻元素（行内块）在一行上，之间存在空白缝隙，一行可以显示多个。</li><li>默认宽度是本身内容宽度。</li><li>高度、行高、外边距、内边距都可以控制（块级元素特点）。</li></ol><div class="table-container"><table><thead><tr><th>元素模式</th><th>元素排列</th><th>设置样式</th><th>默认宽度</th><th>包含</th></tr></thead><tbody><tr><td>块级元素</td><td>一行只能放<strong>一个</strong>块级元素</td><td>可以设置高度宽度</td><td>容器的 100%</td><td>可以包含任何标签</td></tr><tr><td>行内元素</td><td>一行可以放<strong>多个</strong>行内元素</td><td>本身内容宽度</td><td>不可以设置宽度高度</td><td>容纳文本或者其他行内元素</td></tr><tr><td>行内块元素</td><td>一行可以放置<strong>多个</strong>行内块元素</td><td>可以设置高度宽度</td><td>本身内容宽度</td></tr></tbody></table></div><h3 id="元素模式转换"><a href="#元素模式转换" class="headerlink" title="元素模式转换"></a>元素模式转换</h3><p>行内元素和块级元素 <strong>可相互转换</strong>。场景：比如想要增加链接 a 的触发范围。</p><h4 id="行内-gt-块级"><a href="#行内-gt-块级" class="headerlink" title="行内-&gt;块级"></a>行内-&gt;块级</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="块级-gt-行内"><a href="#块级-gt-行内" class="headerlink" title="块级-&gt;行内"></a>块级-&gt;行内</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="行内-块级-gt-行内块元素"><a href="#行内-块级-gt-行内块元素" class="headerlink" title="行内/块级-&gt; 行内块元素"></a>行内/块级-&gt; 行内块元素</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单行文字垂直居中"><a href="#单行文字垂直居中" class="headerlink" title="单行文字垂直居中"></a>单行文字垂直居中</h3><p>line–height = height</p><p>当行高小于盒子高度，则文字偏上；当行高大于盒子高度，文字偏下。</p><h2 id="CSS-的背景"><a href="#CSS-的背景" class="headerlink" title="CSS 的背景"></a>CSS 的背景</h2><h3 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><p><code>background-color</code> 定义了元素的背景颜色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-color</span>: 颜色值;</span><br></pre></td></tr></table></figure><h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><p><code>background-image</code> 属性描述了元素的背景图像</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-image</span>: none|<span class="built_in">url</span>(<span class="string">图片url</span>);</span><br></pre></td></tr></table></figure><h3 id="背景平铺"><a href="#背景平铺" class="headerlink" title="背景平铺"></a>背景平铺</h3><p><code>background-repeat</code>在 HTML 页面上对背景图进行平铺</p><p>既可以添加背景图片，也可以添加背景颜色，图片会覆盖颜色。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-repeat</span>: <span class="built_in">repeat</span>(默认) | no-repeat | repeat-x | repeat-y;</span><br></pre></td></tr></table></figure><h3 id="背景图片位置"><a href="#背景图片位置" class="headerlink" title="背景图片位置"></a>背景图片位置</h3><p><code>background-position</code> 可以改变图片在背景中的位置。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-position</span>: x y;</span><br></pre></td></tr></table></figure><p>参数 x 和 y 指 x 左边和 y 坐标，x 和 y 可以使用方位名词或者精确定位。</p><div class="table-container"><table><thead><tr><th>参数值</th><th>说明</th></tr></thead><tbody><tr><td>length</td><td>百分数 / 由浮点数字和单位字符组成的长度值</td></tr><tr><td>position</td><td>top / center / bottom / left / center / right 方位名词</td></tr></tbody></table></div><p><strong>参数是方位名词</strong></p><ul><li>若两个值都是方位名词，则两个值前后顺序无关，比如<code>left top</code>和<code>top left</code> 效果一致。</li><li>若只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐。</li></ul><p><strong>参数是精确单位</strong></p><ul><li><strong>第一个必定是 x 坐标。第二个是 y 坐标</strong></li><li>若只指定一个数值，则另一个必定是 y 轴居中</li></ul><p><strong>参数是混合单位</strong></p><ul><li>若是混合单位，则 <strong>第一个值是 x 坐标，第二个值是 y 坐标。</strong></li></ul><h3 id="背景图像固定（背景附着）"><a href="#背景图像固定（背景附着）" class="headerlink" title="背景图像固定（背景附着）"></a>背景图像固定（背景附着）</h3><p><code>background-attachment</code> 属性设置 <strong>背景图像是否随着页面其余部分滚动。</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background-attachment</span>: scroll | fixed;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">scroll：背景图像随着对象内容滚动，默认</span></span><br><span class="line"><span class="comment">fixed：背景图像固定</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="背景属性复合写法"><a href="#背景属性复合写法" class="headerlink" title="背景属性复合写法"></a>背景属性复合写法</h3><p>简化代码，将属性写在同一个属性 <code>background</code> 下。 一般按照约定顺序编写。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: transparent <span class="built_in">url</span>(<span class="string">image.jpg</span>) repeat-y fixed top;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">background: 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="背景颜色半透明"><a href="#背景颜色半透明" class="headerlink" title="背景颜色半透明"></a>背景颜色半透明</h3><p>CSS3 提供 <code>background: rgba(r,g,b,a)</code> 属性设置图片透明度，a为透明度。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br></pre></td></tr></table></figure><h2 id="CSS-的三大特性"><a href="#CSS-的三大特性" class="headerlink" title="CSS 的三大特性"></a>CSS 的三大特性</h2><p>CSS 有三个非常重要的特性：<strong>层叠性、继承性、优先级。</strong></p><h3 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h3><p>相同选择器设置相同的样式，此时一个样式就会覆盖另一个冲突的样式。层叠性<strong>主要解决样式冲突的问题</strong>（样式重复）。</p><p>样式冲突遵循<strong>就近原则</strong>，以下代码会采用 <code>color: blue</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h3><p>CSS 中<strong>子标签会继承父标签的 某些样式</strong>，如文本颜色和字号。</p><p>子元素可以继承父元素的样式（<u>text-, font-, line-这些元素开头的可以继承，以及 color 属性</u>）</p><h4 id="行高的继承性"><a href="#行高的继承性" class="headerlink" title="行高的继承性"></a>行高的继承性</h4><p>这个1.5 就是子元素的行高，行高=子元素的文字大小*1.5</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span> Microsoft Yahei;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">10px*1.5 --》div的行高为15p</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><p>当一个元素指定多个选择器时，就会有有优先级的产生。</p><ul><li>选择器相同，则执行层叠性</li><li>选择器不同，则根据选择器权重执行</li></ul><div class="table-container"><table><thead><tr><th>选择器</th><th>选择器权重</th></tr></thead><tbody><tr><td>继承或者<code>*</code></td><td><code>0,0,0,0</code></td></tr><tr><td>元素选择器</td><td><code>0,0,0,1</code></td></tr><tr><td>类选择器，伪类选择器</td><td><code>0,0,1,0</code></td></tr><tr><td>ID 选择器</td><td><code>0,1,0,0</code></td></tr><tr><td>行内样式 <code>style=&quot;&quot;</code></td><td><code>1,0,0,0</code></td></tr><tr><td><code>!important</code></td><td>∞ 无穷大</td></tr></tbody></table></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;css复合选择器&quot;&gt;&lt;a href=&quot;#css复合选择器&quot; class=&quot;headerlink&quot; title=&quot;css复合选择器&quot;&gt;&lt;/a&gt;css复合选择器&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;后代选择器&lt;/li&gt;
&lt;li&gt;子选择器&lt;/li&gt;
&lt;li&gt;并集选择器&lt;/li&gt;
</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.mxne.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="前端" scheme="https://blog.mxne.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="CSS" scheme="https://blog.mxne.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>水仙花数</title>
    <link href="https://blog.mxne.cn/posts/e404.html"/>
    <id>https://blog.mxne.cn/posts/e404.html</id>
    <published>2023-01-16T08:02:35.000Z</published>
    <updated>2023-04-29T08:06:43.736Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是水仙花数"><a href="#什么是水仙花数" class="headerlink" title="什么是水仙花数"></a>什么是水仙花数</h2><blockquote><p>水仙花数：一个<strong>三位数</strong>，其各位数字立方和等于该数本身。</p></blockquote><h2 id="举例："><a href="#举例：" class="headerlink" title="举例："></a>举例：</h2><p>123</p><p>123 % 10 = 3</p><p>123 / 10 % 10 = 2</p><p>123 / 100 = 1</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">100</span>; i &lt; <span class="number">1000</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      a = i % <span class="number">10</span>;       <span class="comment">// 个位</span></span><br><span class="line">      b = i / <span class="number">10</span> % <span class="number">10</span>;  <span class="comment">// 十位</span></span><br><span class="line">      c = i / <span class="number">100</span>;      <span class="comment">// 百位</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (i == a * a * a + b * b * b + c * c * c)</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是水仙花数&quot;&gt;&lt;a href=&quot;#什么是水仙花数&quot; class=&quot;headerlink&quot; title=&quot;什么是水仙花数&quot;&gt;&lt;/a&gt;什么是水仙花数&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;水仙花数：一个&lt;strong&gt;三位数&lt;/strong&gt;，其各位数字立方和等</summary>
      
    
    
    
    <category term="C语言" scheme="https://blog.mxne.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="编程题" scheme="https://blog.mxne.cn/tags/%E7%BC%96%E7%A8%8B%E9%A2%98/"/>
    
    <category term="C语言" scheme="https://blog.mxne.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>斐波那契</title>
    <link href="https://blog.mxne.cn/posts/66a2.html"/>
    <id>https://blog.mxne.cn/posts/66a2.html</id>
    <published>2023-01-16T07:40:23.000Z</published>
    <updated>2023-04-29T08:06:43.732Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是斐波那契？"><a href="#什么是斐波那契？" class="headerlink" title="什么是斐波那契？"></a>什么是斐波那契？</h3><blockquote><p>像如下这样的数列：1，1，2，3，5，8，13，21，34，55……</p><p>从第三项开始，每一项都等于前两项之和。</p></blockquote><p>斐波那契数列是前两个数的和等于第三个数（依次类推）所以我们需要来创建三个变量来代表前两个数和第三个数，用后一个数赋值给前一个数的方式实现将数字一个一个想后推移</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);  <span class="comment">// 第几项</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">3</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        c = a + b;</span><br><span class="line">        a = b;</span><br><span class="line">        b = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-------------------------------</span><br><span class="line">    </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>, b = <span class="number">1</span>, c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">40</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%12d\n&quot;</span>, a);</span><br><span class="line">        c = a + b;</span><br><span class="line">        a = b;</span><br><span class="line">        b = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>每次输出两项</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>, b = <span class="number">1</span>, c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%14d\n%14d\n&quot;</span>, a, b);</span><br><span class="line">        a = a + b;</span><br><span class="line">        b = a + b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;什么是斐波那契？&quot;&gt;&lt;a href=&quot;#什么是斐波那契？&quot; class=&quot;headerlink&quot; title=&quot;什么是斐波那契？&quot;&gt;&lt;/a&gt;什么是斐波那契？&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;像如下这样的数列：1，1，2，3，5，8，13，21，34，55…</summary>
      
    
    
    
    <category term="C语言" scheme="https://blog.mxne.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="编程题" scheme="https://blog.mxne.cn/tags/%E7%BC%96%E7%A8%8B%E9%A2%98/"/>
    
    <category term="C语言" scheme="https://blog.mxne.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>最小公倍数</title>
    <link href="https://blog.mxne.cn/posts/aa0b.html"/>
    <id>https://blog.mxne.cn/posts/aa0b.html</id>
    <published>2023-01-15T07:26:41.000Z</published>
    <updated>2023-04-29T08:06:43.733Z</updated>
    
    <content type="html"><![CDATA[<h3 id="暴力法"><a href="#暴力法" class="headerlink" title="暴力法"></a>暴力法</h3><blockquote><p>找到a,b中的较大值，假设是最小公倍数，然后去整除，不能整除就++，直到找到最小公倍数为止</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a = 12;</span><br><span class="line">    int b = 16;</span><br><span class="line">    if (a &lt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        int tmp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    int i = 0;</span><br><span class="line">    for (i = a;; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if (i % a == 0 &amp;&amp; i % b == 0)</span><br><span class="line">        &#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%d is lowest common multiple&quot;, i);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="搭配辗转相除法求最小公倍数"><a href="#搭配辗转相除法求最小公倍数" class="headerlink" title="搭配辗转相除法求最小公倍数"></a>搭配辗转相除法求最小公倍数</h3><p>最小公倍数 = 两数乘积 / 最大公因数</p><blockquote><p>先使用辗转相除法求最大公约数，然后根据最大公约数和两数的乘积计算最小公倍数</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a = 12;</span><br><span class="line">    int b = 16;</span><br><span class="line">    int z = a * b;   // 两数乘积</span><br><span class="line">    int c = 0;</span><br><span class="line">    while (c = a % b)</span><br><span class="line">    &#123;</span><br><span class="line">        a = b;</span><br><span class="line">        b = c;</span><br><span class="line">    &#125;</span><br><span class="line">    int lcm = z / b;</span><br><span class="line">    printf(&quot;%d is lowest common multiple&quot;, lcm);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;暴力法&quot;&gt;&lt;a href=&quot;#暴力法&quot; class=&quot;headerlink&quot; title=&quot;暴力法&quot;&gt;&lt;/a&gt;暴力法&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;找到a,b中的较大值，假设是最小公倍数，然后去整除，不能整除就++，直到找到最小公倍数为止&lt;/p&gt;
&lt;/b</summary>
      
    
    
    
    <category term="C语言" scheme="https://blog.mxne.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="编程题" scheme="https://blog.mxne.cn/tags/%E7%BC%96%E7%A8%8B%E9%A2%98/"/>
    
    <category term="C语言" scheme="https://blog.mxne.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>最大公约数</title>
    <link href="https://blog.mxne.cn/posts/d91a.html"/>
    <id>https://blog.mxne.cn/posts/d91a.html</id>
    <published>2023-01-15T06:56:35.000Z</published>
    <updated>2023-04-29T08:06:43.731Z</updated>
    
    <content type="html"><![CDATA[<h3 id="什么是最大公约数？"><a href="#什么是最大公约数？" class="headerlink" title="什么是最大公约数？"></a>什么是最大公约数？</h3><blockquote><p><strong>最大公约数</strong> 的本质是一个最大的能同时被两整数整除的自然数</p></blockquote><h2 id="求最大公约数的方法"><a href="#求最大公约数的方法" class="headerlink" title="求最大公约数的方法"></a>求最大公约数的方法</h2><h3 id="暴力法"><a href="#暴力法" class="headerlink" title="暴力法"></a>暴力法</h3><blockquote><p>原理：先比较两数大小，从较小数开始向下递增，直至找到最大公约数</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">12</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">16</span>;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> tmp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = a; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a % i == <span class="number">0</span> &amp;&amp; b % i == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d is greatest common divisor&quot;</span>, i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="辗转相除法（欧几里得法）"><a href="#辗转相除法（欧几里得法）" class="headerlink" title="辗转相除法（欧几里得法）"></a>辗转相除法（欧几里得法）</h3><p><img src="https://bu.dusays.com/2023/02/15/63ec82e76e034.png" alt="image-20221209172951603"></p><blockquote><p>原理：用较大数除较小数，再用出现的余数（第一余数）去除除数，再用出现的余数（第二余数）去除第一余数，如此反复，直到最后余数是0为止。最后的除数就是这两个数的最大公约数。<strong>（以除数和余数反复做除法运算，当余数为 0 时，取当前算式除数为最大公约数）</strong></p></blockquote><p>在这个代码中，首先将 a 和 b 两个数分别赋给变量 a 和 b，然后用 while 循环进行辗转相除，将 a 除以 b 得到余数 c，如果 c 不为 0，则将 b 赋值给 a，将 c 赋值给 b，然后继续进行下一次循环。当 c 为 0 时，此时 b 就是 a 和 b 的最大公约数，最后输出 b。<br>需要注意的是，这个程序也没有考虑 a 和 b 为负数或零的情况，需要在实际使用时做出相应的处理。同时，这个程序也没有考虑 a 和 b 的大小关系，因此需要在程序开始时使用 if 语句将 a 和 b 两个数进行排序，保证 a 是小的数，b 是大的数，以确保算法正确性。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">3139</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">1022</span>;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (c = a % b)</span><br><span class="line">    &#123;</span><br><span class="line">        a = b;</span><br><span class="line">        b = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d is greatest common divisor&quot;</span>, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="辗转相减法"><a href="#辗转相减法" class="headerlink" title="辗转相减法"></a>辗转相减法</h3><blockquote><p>原理： 取两个数中的较大的数做减数，较小的数做被减数，用大的数减去小数，直至除数与被除数相等。<strong>（大减小，直至相等）</strong></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">3139</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">1022</span>;</span><br><span class="line">    <span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (a != b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a &lt; b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> tmp = a;</span><br><span class="line">            a = b;</span><br><span class="line">            b = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        c = a - b;</span><br><span class="line">        a = b;</span><br><span class="line">        b = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d is greatest common divisor&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;什么是最大公约数？&quot;&gt;&lt;a href=&quot;#什么是最大公约数？&quot; class=&quot;headerlink&quot; title=&quot;什么是最大公约数？&quot;&gt;&lt;/a&gt;什么是最大公约数？&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;最大公约数&lt;/strong&gt; 的本质是一个</summary>
      
    
    
    
    <category term="C语言" scheme="https://blog.mxne.cn/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="编程题" scheme="https://blog.mxne.cn/tags/%E7%BC%96%E7%A8%8B%E9%A2%98/"/>
    
    <category term="C语言" scheme="https://blog.mxne.cn/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
</feed>
